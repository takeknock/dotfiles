#include <iostream>
using namespace std;

int root[30][30][2];
int reached[30];
double mint;

int n,m,s,g;

int find( int nowt, int s){
    if( reached[s] == 1) return -1;
    if( s == g ){
        mint = nowt;
        return 1;
    }

    reached[s] = 1;

    for( int i = 0; i < 30; i++){
        if(root[s][i][0] == -1){
            continue;
        }

        if( find(nowt + root[s][i][0], i ) == 1 ){
            return 1;
        }
        
    }
    return -1;
}


int main(){
    cin >> n >> m >> s >> g;

    for(int i = 0; i < 30; i++){
        for(int j = 0; j < 30; j++){
            root[i][j][0] = -1;
            root[i][j][1] = -1;
        }
    }
    
    for(int i = 0; i < m; i++){
        int x,y,d,c;
        cin >> x>>y>>d>>c;
        root[x][y][0] = d;
        root[x][y][1] = c;
    }

    for(int i = 0; i < 30; i++){
        reached[i] = 0;
    }
    
    if( find(0, s) == -1){
        cout << "unreache"<<endl;
    }

    
    return 1;
}

